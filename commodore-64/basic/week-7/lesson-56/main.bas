NEW
10 REM *** GALACTIC MINER ***
20 GOSUB 9000
30 STATE=0:LAST=-1:KEY$="":TRACE=0
40 TI$="000000":NEXTT=0
50 GET K$:IF K$<>"" THEN KEY$=K$
60 IF STATE<>LAST THEN GOSUB 1000
70 ON STATE+1 GOSUB 2000,3000,4000
80 LAST=STATE:GOTO 50

1000 REM *** STATE DRAWER ***
1010 IF STATE=0 THEN GOSUB 1100
1020 IF STATE=1 THEN GOSUB 3100
1030 IF STATE=2 THEN GOSUB 4100
1040 RETURN

1100 REM *** TITLE SCREEN ***
1110 PRINT CHR$(147)
1120 PRINT "GALACTIC MINER"
1130 PRINT
1140 PRINT "SPACE = START   H = HIGH SCORES   D = TOGGLE DEBUG"
1150 RETURN

2000 REM *** TITLE LOOP ***
2010 IF KEY$="D" THEN TRACE=1-TRACE:KEY$="":RETURN
2020 IF KEY$="H" THEN GOSUB 5000:KEY$="":RETURN
2030 IF KEY$=" " THEN STATE=1:GAMEINIT=0:KEY$=""
2040 RETURN

3000 REM *** GAME LOOP ***
3010 IF GAMEINIT=0 THEN GOSUB 3200:GAMEINIT=1
3020 IF KEY$="P" THEN PAUSE=1-PAUSE:KEY$=""
3030 IF PAUSE THEN RETURN
3040 GOSUB 3300:REM input
3050 GOSUB 3400:REM update objects
3060 GOSUB 3500:REM collisions & scoring
3070 GOSUB 3600:REM draw HUD
3080 IF LIVES<0 THEN STATE=2
3090 RETURN

3100 REM *** REDRAW PLAYFIELD ***
3110 PRINT CHR$(147)
3120 FOR R=1 TO ROWS
3130 PRINT MAP$(R)
3140 NEXT R
3150 RETURN

3200 REM *** INITIALISE LEVEL ***
3210 IF LEVEL=0 THEN LEVEL=1
3215 IF LEVEL>LEVELCOUNT THEN LEVEL=1
3220 GOSUB 8000
3230 LIVES=3:SCORE=0:CRYSTALS=0:TARGET=50:SHOT=0:COOLDOWN=0
3240 PX=SPAWNX:PY=SPAWNY:SPD=4:PAUSE=0
3250 FOR I=0 TO 3
3260 CX(I)=INT(RND(1)*38)+1:CY(I)=2+I*2:CV(I)=1+I:GOTOFLAG(I)=1
3270 RX(I)=INT(RND(1)*38)+1:RY(I)=0:RV(I)=2+I
3280 NEXT I
3290 CUTSCENEFLAG=1
3300 RETURN

3300 REM *** PLAYER INPUT ***
3310 IF KEY$="A" THEN PX=PX-SPD
3320 IF KEY$="D" THEN PX=PX+SPD
3330 IF PX<2 THEN PX=2
3340 IF PX>38 THEN PX=38
3350 KEY$=""
3360 RETURN

3400 REM *** UPDATE OBJECTS ***
3410 FOR I=0 TO 3
3420 IF GOTOFLAG(I)=1 THEN CY(I)=CY(I)+CV(I)
3430 IF CY(I)>20 THEN CY(I)=2:CX(I)=INT(RND(1)*38)+1:CV(I)=1+INT(RND(1)*3)
3440 RY(I)=RY(I)+RV(I)
3450 IF RY(I)>20 THEN RY(I)=0:RX(I)=INT(RND(1)*38)+1:RV(I)=2+INT(RND(1)*3)
3460 NEXT I
3470 RETURN

3500 REM *** COLLISIONS & SCORING ***
3510 FOR I=0 TO 3
3520 IF ABS(CX(I)-PX)<2 AND ABS(CY(I)-PY)<2 THEN CRYSTALS=CRYSTALS+1:CY(I)=2:CX(I)=INT(RND(1)*38)+1
3530 IF ABS(RX(I)-PX)<2 AND ABS(RY(I)-PY)<2 THEN LIVES=LIVES-1:RY(I)=0:RX(I)=INT(RND(1)*38)+1
3540 NEXT I
3550 IF CRYSTALS>=TARGET THEN SCORE=SCORE+100:TARGET=TARGET+50:LEVEL=LEVEL+1:PRINT CHR$(147);"MINED OUT!":GOSUB 5200:GAMEINIT=0:CRYSTALS=0
3560 RETURN

3600 REM *** HUD DRAW & DEBUG ***
3610 PRINT CHR$(19);TAB(0);
3620 PRINT "LV:";LEVEL;" SC:";SCORE;" C:";CRYSTALS;" T:";TARGET;" L:";LIVES;"   "
3630 PRINT TAB(PX);
3640 PRINT "\/"
3650 FOR I=0 TO 3
3660 PRINT CHR$(19);TAB(CX(I));CHR$(65)
3670 PRINT CHR$(19);TAB(RX(I));"*"
3680 NEXT I
3690 IF TRACE THEN PRINT CHR$(19);TAB(0);"DBG X:";PX;" CV0:";CV(0);" RV0:";RV(0);"   "
3700 RETURN

4000 REM *** GAME OVER ***
4010 PRINT CHR$(147)
4020 PRINT "VEINS DRY. SCORE:";SCORE
4030 GOSUB 5300
4040 PRINT :PRINT "SPACE = RETRY   Q = QUIT"
4050 IF KEY$=" " THEN STATE=0:LEVEL=0:KEY$=""
4060 IF KEY$="Q" THEN END
4070 RETURN

4100 REM *** GAME-OVER DRAW (HIGH SCORES) ***
4110 RETURN

5000 REM *** SHOW HIGH SCORES ***
5010 PRINT CHR$(147);"TOP MINERS"
5020 FOR I=1 TO 5:PRINT I;".";TAB(6);HSNAME$(I);TAB(14);HSSCORE(I):NEXT I
5030 PRINT :PRINT "PRESS ANY KEY"
5040 GET K$:IF K$="" THEN 5040
5050 PRINT CHR$(147)
5060 RETURN

5200 REM *** CUTSCENE MID-GAME ***
5210 PRINT :PRINT "COMMAND:";" STOCKPILE REACHED!"
5220 PRINT "MINER:";" SEND THE NEXT SHAFT.";:FOR D=1 TO 200:NEXT D
5230 RETURN

5300 REM *** INSERT SCORE ***
5310 POS=0
5320 FOR I=1 TO 5:IF SCORE>HSSCORE(I) AND POS=0 THEN POS=I
5330 NEXT I
5340 IF POS=0 THEN RETURN
5350 FOR J=5 TO POS+1 STEP -1
5360 HSSCORE(J)=HSSCORE(J-1):HSNAME$(J)=HSNAME$(J-1)
5370 NEXT J
5380 INPUT "INITIALS";N$:N$=LEFT$(N$,3)
5390 HSNAME$(POS)=N$:HSSCORE(POS)=SCORE
5400 RETURN

8000 REM *** LOAD LEVEL DATA ***
8010 IF LEVEL>LEVELCOUNT THEN LEVEL=1
8020 RESTORE 8500
8030 FOR L=1 TO LEVEL
8040 READ ROWS:READ TITLE$
8050 FOR R=1 TO ROWS:READ MAP$(R):NEXT R
8060 READ SPAWNX:READ SPAWNY
8070 NEXT L
8080 RETURN

9000 REM *** SETUP ***
9010 X=RND(-TI)
9020 DIM CX(4),CY(4),CV(4),RX(4),RY(4),RV(4),MAP$(24)
9030 DIM HSNAME$(5),HSSCORE(5)
9040 DATA "ACE",600,"JAX",480,"MIN",360,"SID",200,"DOC",120
9050 FOR I=1 TO 5:READ HSNAME$(I):READ HSSCORE(I):NEXT I
9060 LEVEL=0:LEVELCOUNT=2
9070 RETURN

8500 DATA 8,"SURFACE TUNNEL"
8510 DATA "########################################"
8520 DATA "#......................................#"
8530 DATA "#..............++++............######..#"
8540 DATA "#...####.......++++...........#....#..#"
8550 DATA "#..............++++...........#....#..#"
8560 DATA "#............................#....#..#"
8570 DATA "#....######..................#....#..#"
8580 DATA "#............................#....#..#"
8590 DATA "########################################"
8600 DATA 20,18
8610 DATA 8,"CRYSTAL SHAFT"
8620 DATA "########################################"
8630 DATA "#......++++++...............####.....#"
8640 DATA "#......#....#..............#..#.....#"
8650 DATA "#......#....#..............#..#.....#"
8660 DATA "#......#....#..............#..#.....#"
8670 DATA "#......++++++..............#..#.....#"
8680 DATA "#..........................#..#.....#"
8690 DATA "#..####....................#..#.....#"
8700 DATA "########################################"
8710 DATA 18,18
