10 REM *** SPACE DEFENDER ***
20 REM COMPLETE ARCADE GAME
30 REM
100 GOSUB 9100: REM INIT
110 GOSUB 1000: REM TITLE SCREEN
120 GOSUB 2000: REM GAME SETUP
130 GOSUB 3000: REM GAME LOOP
140 GOSUB 4100: REM GAME OVER
150 GOTO 110
999 REM
1000 REM *** TITLE SCREEN ***
1010 PRINT CHR$(147);
1020 PRINT
1030 PRINT "     SPACE DEFENDER"
1040 PRINT
1050 PRINT "  DEFEND EARTH FROM"
1060 PRINT "   THE ALIEN HORDE!"
1070 PRINT
1080 PRINT
1090 PRINT " JOYSTICK PORT 2"
1100 PRINT
1110 PRINT " FIRE TO START"
1120 PRINT
1130 PRINT
1140 PRINT " HIGH SCORE:"
1150 PRINT "  ";HS
1160 J = PEEK(56320)
1170 IF J AND 16 = 0 THEN RETURN
1180 GOTO 1160
1999 REM
2000 REM *** GAME SETUP ***
2010 SC = 0: LI = 3: WA = 1
2020 PRINT CHR$(147);
2030 GOSUB 7000: REM DRAW HUD
2040 REM PLAYER SHIP
2050 SX(0) = 160: SY(0) = 220
2060 SA(0) = 2048: SC(0) = 1
2070 BI = 0: GOSUB 5100: GOSUB 5200
2080 REM CLEAR BULLETS AND ENEMIES
2090 FOR I = 1 TO 7
2100 SA(I) = 0
2110 NEXT I
2120 REM SPAWN FIRST WAVE
2130 GOSUB 8500
2140 RETURN
2999 REM
3000 REM *** GAME LOOP ***
3010 GOSUB 6000: REM INPUT
3020 GOSUB 3200: REM UPDATE PLAYER
3030 GOSUB 3500: REM UPDATE BULLETS
3040 GOSUB 3600: REM UPDATE ENEMIES
3050 GOSUB 3800: REM CHECK COLLISIONS
3060 GOSUB 7100: REM UPDATE SCORE
3070 REM CHECK WAVE COMPLETE
3080 EL = 0
3090 FOR I = 4 TO 7
3100 IF SA(I) > 0 THEN EL = EL + 1
3110 NEXT I
3120 IF EL = 0 THEN GOSUB 8500
3130 REM CHECK GAME OVER
3140 IF LI > 0 THEN GOTO 3010
3150 RETURN
3199 REM
3200 REM *** UPDATE PLAYER ***
3210 SX(0) = SX(0) + JX
3220 SY(0) = SY(0) + JY
3230 REM BOUNDARIES
3240 IF SX(0) < 24 THEN SX(0) = 24
3250 IF SX(0) > 320 THEN SX(0) = 320
3260 IF SY(0) < 50 THEN SY(0) = 50
3270 IF SY(0) > 229 THEN SY(0) = 229
3280 BI = 0: GOSUB 5200: REM UPDATE POSITION
3290 REM FIRE BUTTON
3300 IF JF = 0 THEN RETURN
3310 IF FR > 0 THEN FR = FR - 1: RETURN
3320 GOSUB 8000: REM FIRE BULLET
3330 FR = 5: REM FIRE RATE LIMITER
3340 POKE 54296,15: REM VOLUME
3350 POKE 54276,17: REM ATTACK/DECAY
3360 POKE 54273,20: REM FREQ HI
3370 FOR T = 1 TO 3: NEXT T
3380 POKE 54296,0
3390 RETURN
3499 REM
3500 REM *** UPDATE BULLETS ***
3510 FOR I = 1 TO 3
3520 IF SA(I) = 0 THEN GOTO 3580
3530 SY(I) = SY(I) - 4
3540 IF SY(I) < 50 THEN SA(I) = 0: BI = I: GOSUB 5150: GOTO 3580
3550 BI = I: GOSUB 5200
3560 NEXT I
3570 RETURN
3599 REM
3600 REM *** UPDATE ENEMIES ***
3610 FOR I = 4 TO 7
3620 IF SA(I) = 0 THEN GOTO 3740
3630 REM MOVE DOWN AND SIDE-TO-SIDE
3640 SY(I) = SY(I) + 1
3650 SX(I) = SX(I) + DX(I)
3660 REM WAVE MOTION
3670 IF SX(I) < 24 THEN DX(I) = 1
3680 IF SX(I) > 320 THEN DX(I) = -1
3690 REM OFF BOTTOM
3700 IF SY(I) < 229 THEN GOTO 3730
3710 SA(I) = 0: BI = I: GOSUB 5150
3720 GOSUB 8900: REM LOSE LIFE
3730 BI = I: GOSUB 5200
3740 NEXT I
3750 RETURN
3799 REM
3800 REM *** CHECK COLLISIONS ***
3810 CO = PEEK(53278)
3820 IF CO = 0 THEN RETURN
3830 REM CHECK EACH BULLET
3840 FOR I = 1 TO 3
3850 IF SA(I) = 0 THEN GOTO 3950
3860 REM CHECK AGAINST EACH ENEMY
3870 FOR J = 4 TO 7
3880 IF SA(J) = 0 THEN GOTO 3940
3890 REM BULLET I HIT ENEMY J?
3900 IF CO AND (2^I) = 0 THEN GOTO 3940
3910 IF CO AND (2^J) = 0 THEN GOTO 3940
3920 GOSUB 8200: REM DESTROY BOTH
3930 GOTO 3950
3940 NEXT J
3950 NEXT I
3960 REM CHECK PLAYER VS ENEMIES
3970 FOR I = 4 TO 7
3980 IF SA(I) = 0 THEN GOTO 4030
3990 IF CO AND 1 = 0 THEN GOTO 4030
4000 IF CO AND (2^I) = 0 THEN GOTO 4030
4010 GOSUB 8800: REM PLAYER HIT
4020 GOTO 4040
4030 NEXT I
4040 RETURN
4099 REM
4100 REM *** GAME OVER ***
4110 FOR I = 0 TO 7
4120 SA(I) = 0: BI = I: GOSUB 5150
4130 NEXT I
4140 PRINT CHR$(19);
4150 PRINT
4160 PRINT "   GAME OVER!"
4170 PRINT
4180 PRINT " FINAL SCORE:"
4190 PRINT "  ";SC
4200 IF SC > HS THEN HS = SC: PRINT: PRINT " NEW HIGH SCORE!"
4210 PRINT
4220 PRINT
4230 PRINT " FIRE TO CONTINUE"
4240 J = PEEK(56320)
4250 IF J AND 16 = 0 THEN RETURN
4260 GOTO 4240
4999 REM
5000 REM *** SPRITE SYSTEM ***
5010 REM FROM LESSON 23 FRAMEWORK
5099 REM
5100 REM *** ENABLE SPRITE ***
5110 REM INPUT: BI (SPRITE INDEX)
5120 EN = PEEK(53269)
5130 POKE 53269, EN OR (2^BI)
5140 RETURN
5149 REM
5150 REM *** DISABLE SPRITE ***
5160 REM INPUT: BI (SPRITE INDEX)
5170 EN = PEEK(53269)
5180 POKE 53269, EN AND (255-(2^BI))
5190 RETURN
5199 REM
5200 REM *** UPDATE SPRITE POSITION ***
5210 REM INPUT: BI (SPRITE INDEX)
5220 POKE 2040+BI, SA(BI)
5230 POKE 53287+BI, SC(BI)
5240 POKE 53248+BI*2, SX(BI) AND 255
5250 POKE 53249+BI*2, SY(BI)
5260 HI = PEEK(53264)
5270 IF SX(BI) > 255 THEN HI = HI OR (2^BI): GOTO 5290
5280 HI = HI AND (255-(2^BI))
5290 POKE 53264, HI
5300 RETURN
5999 REM
6000 REM *** INPUT HANDLER ***
6010 REM OUTPUT: JX, JY, JF
6020 J = PEEK(56320)
6030 JX = 0: JY = 0: JF = 0
6040 IF J AND 1 = 0 THEN JY = -2
6050 IF J AND 2 = 0 THEN JY = 2
6060 IF J AND 4 = 0 THEN JX = -2
6070 IF J AND 8 = 0 THEN JX = 2
6080 IF J AND 16 = 0 THEN JF = 1
6090 RETURN
6999 REM
7000 REM *** DRAW HUD ***
7010 PRINT "SCORE:";SC;"  WAVE:";WA;"  LIVES:";
7020 FOR I = 1 TO LI
7030 PRINT CHR$(81);
7040 NEXT I
7050 PRINT
7060 RETURN
7099 REM
7100 REM *** UPDATE SCORE DISPLAY ***
7110 POKE 1024,19: REM 'S'
7120 POKE 1025,3: REM 'C'
7130 POKE 1026,15: REM 'O'
7140 POKE 1027,18: REM 'R'
7150 POKE 1028,5: REM 'E'
7160 POKE 1029,26: REM ':'
7170 REM CONVERT SCORE TO STRING
7180 S$ = STR$(SC)
7190 FOR I = 1 TO LEN(S$)
7200 C = ASC(MID$(S$,I,1))
7210 IF C = 32 THEN C = 48
7220 POKE 1030+I, C-48
7230 NEXT I
7240 RETURN
7999 REM
8000 REM *** FIRE BULLET ***
8010 REM FIND FREE BULLET SLOT
8020 FOR I = 1 TO 3
8030 IF SA(I) > 0 THEN GOTO 8090
8040 SX(I) = SX(0): SY(I) = SY(0) - 10
8050 SA(I) = 2049: SC(I) = 7
8060 BI = I
8070 GOSUB 5100: GOSUB 5200
8080 RETURN
8090 NEXT I
8100 RETURN
8199 REM
8200 REM *** DESTROY ENEMY ***
8210 REM INPUT: I (BULLET), J (ENEMY)
8220 SA(I) = 0: BI = I: GOSUB 5150
8230 SA(J) = 0: BI = J: GOSUB 5150
8240 SC = SC + 10 * WA
8250 GOSUB 7100
8260 REM EXPLOSION SOUND
8270 POKE 54296,15
8280 POKE 54276,9
8290 FOR T = 30 TO 1 STEP -1
8300 POKE 54273,T
8310 NEXT T
8320 POKE 54296,0
8330 RETURN
8499 REM
8500 REM *** SPAWN WAVE ***
8510 WA = WA + 1
8520 GOSUB 7000
8530 REM SPAWN 4 ENEMIES
8540 FOR I = 4 TO 7
8550 SX(I) = 40 + (I-4) * 80
8560 SY(I) = 60
8570 SA(I) = 2050: SC(I) = 2
8580 DX(I) = 1
8590 IF I = 5 THEN DX(I) = -1
8600 IF I = 7 THEN DX(I) = -1
8610 BI = I: GOSUB 5100: GOSUB 5200
8620 NEXT I
8630 REM WAIT MESSAGE
8640 PRINT CHR$(19);
8650 PRINT
8660 PRINT "    WAVE ";WA
8670 FOR T = 1 TO 500: NEXT T
8680 PRINT CHR$(147);
8690 GOSUB 7000
8700 RETURN
8799 REM
8800 REM *** PLAYER HIT ***
8810 REM INPUT: I (ENEMY INDEX)
8820 SA(I) = 0: BI = I: GOSUB 5150
8830 GOSUB 8900: REM LOSE LIFE
8840 RETURN
8899 REM
8900 REM *** LOSE LIFE ***
8910 LI = LI - 1
8920 GOSUB 7000
8930 REM DEATH SOUND
8940 POKE 54296,15
8950 POKE 54276,0
8960 FOR T = 1 TO 30
8970 POKE 54273,T
8980 NEXT T
8990 POKE 54296,0
9000 REM BRIEF INVINCIBILITY
9010 FOR T = 1 TO 100: NEXT T
9020 RETURN
9099 REM
9100 REM *** INIT ***
9110 PRINT CHR$(147);
9120 POKE 53281,0: REM BLACK BORDER
9130 POKE 53280,0: REM BLACK BACKGROUND
9140 REM SPRITE ARRAYS
9150 DIM SX(7), SY(7), SA(7), SC(7), DX(7)
9160 REM GAME VARS
9170 HS = 0: FR = 0
9180 REM SPRITE DATA
9190 GOSUB 9300: REM PLAYER SHIP
9200 GOSUB 9500: REM BULLET
9210 GOSUB 9700: REM ENEMY
9220 REM ENABLE SPRITES
9230 POKE 53269,0
9240 RETURN
9299 REM
9300 REM *** PLAYER SPRITE DATA ***
9310 FOR I = 0 TO 62
9320 READ D
9330 POKE 2048*64+I,D
9340 NEXT I
9350 DATA 0,24,0,0,60,0,0,60,0
9360 DATA 0,126,0,1,255,128,1,255,128
9370 DATA 3,255,192,7,255,224,15,255,240
9380 DATA 31,255,248,31,231,248,63,195,252
9390 DATA 63,129,252,127,129,254,127,129,254
9400 DATA 63,129,252,31,195,248,15,231,240
9410 DATA 7,255,224,3,255,192,1,255,128
9420 DATA 0,126,0,0,0,0
9430 RETURN
9499 REM
9500 REM *** BULLET SPRITE DATA ***
9510 FOR I = 0 TO 62
9520 READ D
9530 POKE 2049*64+I,D
9540 NEXT I
9550 DATA 0,0,0,0,24,0,0,60,0
9560 DATA 0,126,0,0,126,0,0,126,0
9570 DATA 0,126,0,0,60,0,0,24,0
9580 DATA 0,0,0,0,0,0,0,0,0
9590 DATA 0,0,0,0,0,0,0,0,0
9600 DATA 0,0,0,0,0,0,0,0,0
9610 DATA 0,0,0,0,0,0,0,0,0
9620 DATA 0,0,0,0,0,0
9630 RETURN
9699 REM
9700 REM *** ENEMY SPRITE DATA ***
9710 FOR I = 0 TO 62
9720 READ D
9730 POKE 2050*64+I,D
9740 NEXT I
9750 DATA 3,0,192,7,129,224,15,195,240
9760 DATA 31,231,248,63,255,252,127,255,254
9770 DATA 255,255,255,255,231,255,255,195,255
9780 DATA 127,129,254,63,0,252,31,0,248
9790 DATA 15,0,240,7,0,224,3,0,192
9800 DATA 1,129,128,0,195,0,0,126,0
9810 DATA 0,60,0,0,24,0,0,0,0
9820 DATA 0,0,0,0,0,0
9830 RETURN
